@using JatanWebApp.Helpers
@using JatanWebApp.Models.ViewModels
@model CreateGameViewModel
@{
    ViewBag.Title = "Create Game";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@section css
{
    <link href="~/Content/create-game.css?v=@Html.GetGuid()" rel="stylesheet" />
}

<div class="body-content">
    <div class="form-create">
        <div class="form-create-logo"></div>
        <section id="createForm">
            @using (Html.BeginForm("Create", "Game", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Create game</h4>
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(m => m.DisplayName, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.DisplayName, new {@class = "form-control", placeholder = "Name of the game lobby"})
                    @Html.ValidationMessageFor(m => m.DisplayName, "", new {@class = "text-danger"})
                </div>
                <hr/>
                <div class="form-group form-group-sm">
                    <i class="fa fa-lock fa-lg group-label-icon" style="color:darkgray" aria-hidden="true"></i>
                    @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Password, new {@class = "form-control", placeholder = "Password (optional)"})
                    @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                </div>
                <div class="form-group form-group-sm">
                    <i class="fa fa-group fa-lg group-label-icon" style="color:darkcyan" aria-hidden="true"></i>
                    @Html.LabelFor(m => m.MaxNumberOfPlayers, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.MaxNumberOfPlayers, Model.MaxNumberOfPlayersList, null, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.MaxNumberOfPlayers, "", new {@class = "text-danger"})
                </div>
                <div class="form-group form-group-sm">
                    <i class="fa fa-clock-o fa-lg group-label-icon" style="color:darkblue" aria-hidden="true"></i>
                    @Html.LabelFor(m => m.TurnTimeLimit, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.TurnTimeLimit, Model.TurnTimeLimitList, null, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.TurnTimeLimit, "", new {@class = "text-danger"})
                </div>
                <div class="form-group form-group-sm">
                    <i class="fa fa-trophy fa-lg group-label-icon" style="color:goldenrod" aria-hidden="true"></i>
                    @Html.LabelFor(m => m.WinScore, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.WinScore, Model.WinScoreList, null, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.WinScore, "", new {@class = "text-danger"})
                </div>
                <div class="form-group form-group-sm">
                    <i class="fa fa-male fa-lg group-label-icon" aria-hidden="true"></i>
                    @Html.LabelFor(m => m.RobberMode, new { @class = "control-label" })
                    @Html.EnumDropDownListFor(m => m.RobberMode, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.RobberMode, "", new {@class = "text-danger"})
                </div>
                <div class="form-group form-group-sm">
                    <i class="fa fa-handshake-o fa-lg group-label-icon" style="color:darkgreen" aria-hidden="true"></i>
                    @Html.LabelFor(m => m.AllowPlayerTrading, new { @class = "control-label" })
                    @Html.EnumDropDownListFor(m => m.AllowPlayerTrading, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AllowPlayerTrading, "", new { @class = "text-danger" })
                </div>
                <div class="form-group form-group-sm">
                    <i class="fa fa-gavel fa-lg group-label-icon" style="color: brown" aria-hidden="true"></i>
                    @Html.LabelFor(m => m.CardLossThreshold, new {@class = "control-label"})
                    @Html.DropDownListFor(m => m.CardLossThreshold, Model.CardLossThresholdList, null, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.CardLossThreshold, "", new {@class = "text-danger"})
                </div>
                <hr/>
                <div class="form-group">
                    <input type="submit" value="Create" class="form-control btn btn-primary"/>
                </div>
            }
        </section>
    </div>
</div>
